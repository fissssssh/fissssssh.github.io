<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>hugo on fissssssh</title><link>https://blog.fissssssh.com/tags/hugo/</link><description>Recent content in hugo on fissssssh</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 24 Jan 2023 02:22:36 +0800</lastBuildDate><atom:link href="https://blog.fissssssh.com/tags/hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>在 Hugo 中集成 utterances 评论组件</title><link>https://blog.fissssssh.com/posts/integrate-utterances-in-hugo/</link><pubDate>Tue, 24 Jan 2023 02:22:36 +0800</pubDate><guid>https://blog.fissssssh.com/posts/integrate-utterances-in-hugo/</guid><description>utterances 是基于 GitHub issues 构建的轻量级评论小部件，通过此组件可以将 Github issues 应用于任何网站
前置条件 一个公开的 github repo 在该 repo 中安装utterances app 简单集成 打开utterances官网
在 configuration 节点填写 repo 信息等，填写好后会生成对应的组件代码
我使用的是 PaperMod1 主题，将生成好的代码放入layouts/partials/comments.html
&amp;lt;!--layouts/partials/comments.html--&amp;gt; &amp;lt;script src=&amp;#34;https://utteranc.es/client.js&amp;#34; repo=&amp;#34;[ENTER REPO HERE]&amp;#34; issue-term=&amp;#34;pathname&amp;#34; theme=&amp;#34;github-light&amp;#34; label=&amp;#34;Comment&amp;#34; crossorigin=&amp;#34;anonymous&amp;#34; async &amp;gt;&amp;lt;/script&amp;gt; 然后在config.yaml中开启评论功能即可简单集成
params: comments: true 动态主题适配 PaperMod 有明亮和暗黑两种颜色模式，而 utterances 的主题是编码时就写在script标签中的，为了使 comments 组件的主题适配 PaperMod 颜色主题，有以下两个步骤：
主题动态初始化 &amp;lt;!-- layouts/partials/comments.html --&amp;gt; &amp;lt;script&amp;gt; (function () { let theme = localStorage.getItem(&amp;#34;pref-theme&amp;#34;); // already has prefer theme if (theme) { theme = theme === &amp;#34;dark&amp;#34; ?</description></item><item><title>Css Integrity Error When Load Hugo Publish</title><link>https://blog.fissssssh.com/posts/css-integrity-error-when-load-hugo-publish/</link><pubDate>Mon, 20 Jun 2022 21:30:04 +0800</pubDate><guid>https://blog.fissssssh.com/posts/css-integrity-error-when-load-hugo-publish/</guid><description>问题描述 近日我使用 hugo 构建了我的博客，并通过 Github Action 将其发布在 Github Pages 上，刚开始还是很美好的，但是过一短时间以后打开页面发现样式全无，使用浏览器的开发者工具查看资源获取没有问题，但是在控制台却出现了这样一句话：
Failed to find a valid digest in the &amp;#39;integrity&amp;#39; attribute for resource &amp;#39;***&amp;#39; with computed SHA-256 integrity &amp;#39;***&amp;#39;. The resource has been blocked. 寻找原因 我在 MDN 上寻找到了关于 integrity 的定义，大概描述就是这是一个签名，浏览器获取到相应资源后会用相同的方法计算一个签名，只有签名相同时才会加载对应的资源，如果两个签名不一致则是文件完整性被破坏（文件发生了改变）。
问题来了，整个发布过程是由 Github Action 全自动操作的，没有人为干预，文件为何会无缘无故改变呢？
答案是 Cloudflare。 Cloudflare 中默认会开启静态资源的缓存来提高网站的加载速度，可是为什么缓存会改变文件呢？缓存并不会改变文件，在 Cloudflare 的 Speed &amp;gt; Optimization 中有一个叫 Auto Minify 的选项，描述如下：
Reduce the file size of source code on your website.
Note: Purge cache to have your change take effect immediately.</description></item></channel></rss>